    - name: Determine if laptop
      command: laptop-detect
      register: is_laptop
      ignore_errors: yes

    - name: Determine if nVidia graphics card
      shell: hwinfo --gfxcard | fgrep "Model:" | fgrep -i nvidia
      register: is_nvidia
      ignore_errors: yes

    - name: Determine if intel graphics card
      shell: hwinfo --gfxcard | fgrep "Model:" | fgrep -i intel
      register: is_intel_graphics
      ignore_errors: yes

    - name: Determine product name
      shell: dmidecode -s system-product-name
      become: yes
      register: product_name

    - name: Determine bios version
      shell: dmidecode -s bios-version
      become: yes
      register: bios_version

    - name: Create home directories
      file: path=~/{{ item }} state=directory
      with_items:
      - Installs
      - .config/terminator

    - name: Symlink ~/Installs
      file: src=~/Installs dest=/tmp/Installs state=link

    - name: Install base packages
      apt: pkg={{ item }}
      become: yes
      with_items:
      - build-essential
      - libssl-dev
      - libffi-dev
      - python-dev
      - python-pip
      - python-software-properties
      - python-gpgme

    - name: Setup workspaces
      command: gsettings set org.compiz.core:/org/compiz/profiles/unity/plugins/core/ {{ item.key }} {{ item.value }}
      with_items:
      - {key: hsize, value: 2}
      - {key: vsize, value: 2}

    - name: Remove Totem media player
      apt: pkg=totem state=absent
      become: yes

    - name: Install VLC media player
      apt: pkg=vlc
      become: yes

    - name: Remove rhythmbox music player
      apt: pkg=rhythmbox state=absent
      become: yes

    - name: Install gnote note taking application
      apt: pkg=gnote
      become: yes

    - name: Install Address Book
      apt: pkg=address-book-app
      become: yes

    - name: Install Geary email client
      apt: pkg=geary
      become: yes

    - name: Install chromium web browser
      apt: pkg=chromium-browser
      become: yes

    - name: Install git source control
      apt: pkg=git-core
      become: yes

    - name: Install gitg git GUI
      apt: pkg=gitg
      become: yes

    - name: Set vim as git editor
      git_config: name=core.editor scope=global value=vim

    - name: Install subversion source control
      apt: pkg=subversion
      become: yes

    - name: Install ansible configuration management
      pip: name=ansible version=2.1.1.0
      become: yes

    - name: Install terminator terminal emulator
      apt: pkg=terminator
      become: yes

    - name: Copy terminator configuration
      copy: src=terminator.config dest=~/.config/terminator/config

    - name: Install HTTPie cURL wrapper
      apt: pkg=httpie
      become: yes

    - name: Install tmux terminal multiplexer
      apt: pkg=tmux
      become: yes

    - name: Install icdiff side by side diff tool
      pip: name=icdiff
      become: yes

    - name: Install SSH server
      apt: pkg=openssh-server
      become: yes

    - name: Install OpenVPN client
      apt: pkg=openvpn
      become: yes

    - name: Install rbenv ruby version control
      apt: pkg={{ item }}
      become: yes
      with_items:
      - rbenv
      - ruby-build

    - name: Add user to user groups
      user: name={{ ansible_user_id }} groups={{ item }} append=yes
      with_items:
      - pcp
      - docker
      become: yes

    - name: Install vim plugins
      git: repo={{ item.repo }} dest=~/.vim/bundle/{{ item.dest }}
      with_items:
      - {repo: "https://github.com/pearofducks/ansible-vim.git", dest: ansible-vim}
      - {repo: "https://github.com/plasticboy/vim-markdown.git", dest: vim-markdown}
      - {repo: "https://github.com/IN3D/vim-raml.git", dest: vim-raml}

    - name: Update vim configuration
      lineinfile: dest=~/.vimrc line="{{ item }}"
      with_items:
      - let g:vim_markdown_folding_style_pythonic = 1

    - name: Download .deb
      get_url: url={{ item.url }} dest=~/Installs/{{ item.name }}
      with_items: "{{ installs }}"

    - name: Install .deb
      apt: deb=/tmp/Installs/{{ item.name }}
      become: yes
      with_items: "{{ installs }}"

    - name: Get JetBrains toolbox
      get_url: url=https://download-cf.jetbrains.com/toolbox/jetbrains-toolbox-1.1.2143.tar.gz dest=~/Installs/jetbrains-toolbox-1.1.2143.tar.gz

    - name: Extract JetBrains toolbox
      unarchive: src=~/Installs/jetbrains-toolbox-1.1.2143.tar.gz dest=/tmp

    - name: Copy JetBrains toolbox
      copy: src=/tmp/jetbrains-toolbox-1.1.2143/jetbrains-toolbox dest=/usr/bin/jetbrains-toolbox mode=0755
      become: yes

    - name: Install GIMP photo editor
      apt: pkg=gimp
      become: yes

    - name: Install shutter screenshot tool
      apt: pkg=shutter
      become: yes

    - name: Install PlantUML diagramming tool
      apt: pkg=plantuml
      become: yes

    - name: Copy bashrc source file
      copy: src=bashrc dest=/tmp/bashrc

    - name: Get .bashrc content
      shell: cat /tmp/bashrc
      register: bashrc_content

    - name: Update .bashrc
      blockinfile:
        dest: ~/.bashrc
        backup: yes
        block: |
          {{ bashrc_content.stdout }}

    - name: Add rbenv to .bashrc
      lineinfile: dest=~/.bashrc line='eval "$(rbenv init -)"'

    - name: Install global NPM packages
      npm: name={{ item.name }} version={{ item.version }} global=yes
      become: yes
      with_items:
      - {name: raml-cop, version: 3.0.0}
      - {name: raml2html, version: 5.0.0}
      - {name: gulp-cli, version: 1.2.2}

    - name: Install Hardware Enablement (HWE) stack
      apt: pkg={{ item }}
      become: yes
      with_items:
      - linux-generic-hwe-16.04
      - xserver-xorg-hwe-16.04

    - name: Install Laptop Mode Tools
      apt: pkg=laptop-mode-tools
      when: is_laptop|succeeded
      become: yes

    - name: Install multitouch gesture recognizer
      apt: pkg=touchegg
      when: is_laptop|succeeded
      become: yes

    - name: Copy touchegg configuration
      copy: src={{ item.source }} dest={{ item.destination }}
      when: is_laptop|succeeded
      with_items:
      - {source: touchegg.conf, destination: ~/.config/touchegg/touchegg.conf}
      - {source: xprofile, destination: ~/.xprofile}

    - name: Install bumblebee nvidia
      apt: pkg={{ item }}
      when: is_nvidia|succeeded and is_intel_graphics|succeeded and is_laptop|succeeded
      become: yes
      with_items:
      - primus
      - bumblebee
      - bumblebee-nvidia
      - linux-headers-generic
      - xserver-xorg-video-intel-hwe-16.04
